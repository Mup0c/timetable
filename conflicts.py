from query import *

class conflict:

    def __init__(self, type_id, name, fields):
        self.type_id = type_id
        self.name = name
        self.fields = fields

    def create(self):
        query = QueryBuilder.createConflict(QueryBuilder(),self.fields)
        cur.execute(query)
        conflicting_items = cur.fetchall()
        past_unit = ()
        group_id = 0
        for item in conflicting_items:
            if item == conflicting_items[0]: past_unit = item
            if item[1:] != past_unit[1:]: group_id += 1
            query = QueryBuilder.getInsert(QueryBuilder(),"CONFLICTS",
                                           ["CONFLICT_TYPE_ID", "CONFLICT_GROUP_ID", "SCHED_ITEM_ID"], True)
            cur.execute(query, [self.type_id, group_id, item[0]])
            past_unit = item

def updateConflicts():
    cur.execute('''RECREATE TABLE CONFLICTS(
                         ID Integer GENERATED BY DEFAULT AS IDENTITY,
                         CONFLICT_TYPE_ID Integer NOT NULL,
                         CONFLICT_GROUP_ID Integer NOT NULL,
                         SCHED_ITEM_ID Integer NOT NULL,
                         PRIMARY KEY (ID)
                     )''')
    cur.transaction.commit()
    for conflict in conflicts_meta:
        conflict.create()
    cur.transaction.commit()

conflicts_meta = (
    conflict("0", "Одинаковые аудитории", ["WEEKDAY_ID", "LESSON_ID", "AUDIENCE_ID"]),
    conflict("1", "Разрыв преподавателя", ["WEEKDAY_ID", "LESSON_ID", "TEACHER_ID"]),
    conflict("2", "Разрыв группы", ["WEEKDAY_ID", "LESSON_ID", "GROUP_ID"])
    )
